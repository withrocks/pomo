#!/usr/bin/env python
import sys
import os
import json
import datetime
import time

class TimeProvider:
  def time(self):
     return time.time()

import subprocess
class Notifier:
  def notify(self, caption, msg):
    subprocess.Popen(["notify-send", caption, msg])

class Pomo:
  def __init__(self, time_provider=TimeProvider()):
    self.time_provider = time_provider

  def start_new(self, length=25*60):
    self.length = length
    self.state = "started"
    self.started_at = self.time_provider.time()

  def has_ended(self):
    elapsed = self.time_provider.time() - self.started_at
    left = self.length - elapsed
    return left < 0

  def serialized(self):
    return { "length": self.length,
             "state": self.state,
             "started_at": self.started_at }

  def wait(self):
    print "Waiting for end of pomodoro - you go work, I'll notify you when done"
    # Loop until ended
    while True:
      if self.has_ended():
        break
      time.sleep(1)

def get_file(mode):
  state_postfix = ""
  path = os.path.expanduser("~/.pomo/current" + state_postfix)
  f = open(path, mode)
  return f

def start():
  time_provider = TimeProvider()
  pomo = Pomo(time_provider)
  pomo.start_new()
  f = get_file("w")
  f.write(json.dumps(pomo.serialized()))
  f.write('\n')
  f.close()
  print "Started new pomodoro (%s seconds)" % (pomo.length)
  pomo.wait()
  notifier = Notifier()
  notifier.notify("Pomodoro done", "Good job")

def end():
  config["state"] = "stopped"
  json.dump(config, f)

def status():
  f = get_file("r")
  config = json.load(f)
  state = config["state"]
  elapsed = time.time() - config["started_at"]
  length = config["length"]
  left = length - elapsed
  if state == "started":
    if left < 0:
      print "done"
    else:
      print int(elapsed) / 60

def main(action):
  if action == "start":
    start()
  elif action == "stop":
    end()
  elif action == "status":
    status()
  else:
    print "Unknown action '%s'" % action

if len(sys.argv) > 1:
  action = sys.argv[1]
  main(action)
else:
  print "Usage: pomo start|stop|status"
